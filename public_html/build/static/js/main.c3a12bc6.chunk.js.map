{"version":3,"sources":["api.js","components/Home.jsx","components/SignIn.jsx","components/SignUp.jsx","components/Header.jsx","components/Restaurant.jsx","components/Logout.jsx","components/Orders.jsx","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","getToken","localStorage","getItem","placeOrder","payload","Promise","resolve","reject","fetch","method","body","JSON","stringify","headers","Content-Type","Accept","Authorization","then","resp","ok","json","statusText","catch","err","signIn","registerUser","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","restaurants","_this2","res","setState","alert","window","location","react_default","a","createElement","className","map","restaurant","key","id","Card","style","width","Body","Title","name","Text","description","contact","Button","variant","react_router_dom","to","concat","Component","SignIn","username","password","setItem","token","handleUsernameChange","event","target","value","handlePasswordChange","type","placeholder","required","autoFocus","onChange","htmlFor","onClick","SignUp","handleSignUp","cpassword","email","handleEmailChange","handleCPasswordChange","Header","Navbar","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","Restaurant","handleOrderPlace","itemId","items","restaurantId","undefined","match","params","loadItems","_this3","item","quantity","price","Logout","clear","Orders","prop","orders","order","App","components_Header","react_router","exact","path","component","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3a12bc6.chunk.js","sourcesContent":["const BASE_URL = 'http://localhost:8000/api/v1';\n\nconst getToken = () => {\n    return localStorage.getItem('token')\n};\n\nexport const loadRestaurants = () => new Promise((resolve, reject) => {\n    fetch(BASE_URL + '/restaurant/',{\n        headers:{\n            Authorization: 'Token ' + getToken()\n        }\n    })\n        .then(resp => {\n            if (!resp.ok) {\n                reject(resp.statusText);\n            }\n            else {\n                resolve(resp.json());\n            }\n        }).catch(err => reject(err))\n});\n\nexport const loadItems = (restaurantId) => new Promise((resolve, reject) => {\n    fetch(BASE_URL + `/items/${restaurantId}/`,{\n        headers:{\n            Authorization: 'Token ' + getToken()\n        }\n    })\n        .then(resp => {\n            if (!resp.ok) {\n                reject(resp.statusText);\n            }\n            else {\n                resolve(resp.json());\n            }\n        })\n        .catch(err => reject(err))\n});\n\nexport const placeOrder = (payload) => new Promise((resolve, reject) => {\n   fetch(BASE_URL + '/createOrder/',{\n       method: \"POST\",\n       body: JSON.stringify(payload),\n       headers:{\n           'Content-Type': 'application/json',\n           'Accept': 'application/json',\n           Authorization: 'Token ' + getToken()\n       }\n   })\n       .then(resp => {\n           if (!resp.ok) {\n               reject(resp.statusText);\n           }\n           else {\n               resolve(resp.json());\n           }\n       })\n       .catch(err => reject(err))\n});\n\nexport const signIn = (payload) => new Promise((resolve, reject) => {\n   fetch(BASE_URL + '/api-token-auth/', {\n       method: \"POST\",\n       body: JSON.stringify(payload),\n       headers: {\n           'Content-Type': 'application/json',\n           'Accept': 'application/json',\n       }\n   })\n       .then(resp => {\n           if (!resp.ok) {\n               reject(resp.statusText);\n           }\n           else {\n               resolve(resp.json());\n           }\n       })\n       .catch(err => reject(err))\n});\n\nexport const loadOrders = () => new Promise((resolve, reject) => {\n   fetch(BASE_URL + '/orders/',{\n       headers:{\n           Authorization: 'Token ' + getToken()\n       }\n   })\n       .then(resp => {\n           if (!resp.ok) {\n               reject(resp.statusText);\n           }\n           else {\n               resolve(resp.json());\n           }\n       })\n       .catch(err => reject(err))\n});\n\nexport const registerUser = (payload) => new Promise((resolve, reject) => {\n   fetch(BASE_URL +'/register/',{\n       method: \"POST\",\n       body: JSON.stringify(payload),\n       headers: {\n           'Content-Type': 'application/json',\n           'Accept': 'application/json',\n           Authorization: 'Token ' + getToken()\n       }})\n           .then(resp => {\n               if (!resp.ok) {\n                   reject(resp.statusText);\n               }\n               else {\n                   resolve(resp.json());\n               }\n           })\n           .catch(err => reject(err))\n});\n\n","import {Component} from \"react\";\nimport React from \"react\";\nimport {loadRestaurants} from \"../api\";\nimport {Button, Card} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nclass Home extends Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            restaurants:[]\n        }\n    }\n\n    componentDidMount(){\n        if(!localStorage.getItem('token')){\n            window.location = \"/signin\";\n        }else {\n            loadRestaurants()\n                .then((res) => {\n                    this.setState({restaurants: res})\n                })\n                .catch((err) => alert(err))\n        }\n    }\n\n    render () {\n\n        return (\n            <div className=\"container\">\n                {this.state.restaurants.map((restaurant) => {\n                    return (\n                        <div key={restaurant.id} className='flex_center'>\n                            <br/>\n                            <Card style={{ width: '18rem' }}>\n                                {/*<Card.Img variant=\"top\" src=\"holder.js/100px180\" />*/}\n                                <Card.Body>\n                                    <Card.Title>{restaurant.name}</Card.Title>\n                                    <Card.Text>\n                                        {restaurant.description}\n                                        <br/>\n                                        Contact: {restaurant.contact}\n                                    </Card.Text>\n                                    <Button variant=\"primary\">\n                                        <Link to={`restaurant/${restaurant.id}`} className=\"link\">\n                                            View Menu\n                                        </Link>\n                                    </Button>\n                                </Card.Body>\n                            </Card>\n                            <br/>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import {Component} from \"react\";\nimport React from \"react\";\nimport {signIn} from \"../api\";\n\nclass SignIn extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            username:'',\n            password:'',\n        }\n    }\n\n    signIn = () => {\n        let payload = {\n            username: this.state.username,\n            password: this.state.password\n        };\n        signIn(payload)\n            .then(res => {\n                localStorage.setItem('token', res.token);\n                window.location = \"/\";\n            })\n            .catch(err => alert(err))\n    };\n\n    handleUsernameChange = (event) => {\n        this.setState({username: event.target.value})\n    };\n\n    handlePasswordChange = (event) => {\n        this.setState({password: event.target.value})\n    };\n\n    render () {\n\n        if(localStorage.getItem('token')){\n            window.location = \"/\";\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n                        <div className=\"card card-signin my-5\">\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title text-center\">Sign In</h5>\n                                <div className=\"form-signin\">\n                                    <div className=\"form-label-group\">\n                                        <input type=\"text\" id=\"inputUsername\" className=\"form-control\"\n                                               placeholder=\"Username\" required autoFocus\n                                               onChange={this.handleUsernameChange}/>\n                                            <label htmlFor=\"inputUsername\">Username</label>\n                                    </div>\n\n                                    <div className=\"form-label-group\">\n                                        <input type=\"password\" id=\"inputPassword\" className=\"form-control\"\n                                               placeholder=\"Password\" required\n                                               onChange={this.handlePasswordChange}/>\n                                            <label htmlFor=\"inputPassword\">Password</label>\n                                    </div>\n\n                                    <button className=\"btn btn-lg btn-primary btn-block text-uppercase\"\n                                            type=\"submit\"\n                                            onClick={this.signIn}>\n                                        Sign in\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SignIn\n","import {Component} from \"react\";\nimport React from \"react\";\nimport {registerUser} from \"../api\";\n\nclass SignUp extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            username:'',\n            email:'',\n            password:'',\n            cpassword:'',\n        }\n    }\n\n    handleSignUp = () => {\n        if(this.state.password !== this.state.cpassword ){\n            alert(\"Password don't match\")\n        }\n        let payload = {\n            username: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n        };\n        registerUser(payload)\n            .then(res => {\n                alert(JSON.stringify(res));\n                window.location = \"/\";\n            })\n            .catch(err => alert(err))\n    };\n\n    handleUsernameChange = (event) => {\n        this.setState({username: event.target.value})\n    };\n\n    handleEmailChange = (event) => {\n        this.setState({email: event.target.value})\n    };\n\n    handlePasswordChange = (event) => {\n        this.setState({password: event.target.value})\n    };\n\n    handleCPasswordChange = (event) => {\n        this.setState({cpassword: event.target.value})\n    };\n\n\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n                        <div className=\"card card-signin my-5\">\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title text-center\">Sign Up</h5>\n                                <div className=\"form-signin\">\n                                    <div className=\"form-label-group\">\n                                        <input type=\"text\" id=\"inputUsername\" className=\"form-control\"\n                                               placeholder=\"Username\" required autoFocus\n                                               onChange={this.handleUsernameChange}\n                                        />\n                                        <label htmlFor=\"inputUsername\">Username</label>\n                                    </div>\n\n                                    <div className=\"form-label-group\">\n                                        <input type=\"email\" id=\"inputEmail\" className=\"form-control\"\n                                               placeholder=\"Email Address\" required autoFocus\n                                               onChange={this.handleEmailChange}\n                                        />\n                                        <label htmlFor=\"inputEmail\">Email Address</label>\n                                    </div>\n\n                                    <div className=\"form-label-group\">\n                                        <input type=\"password\" id=\"inputPassword\" className=\"form-control\"\n                                               placeholder=\"Password\" required\n                                               onChange={this.handlePasswordChange}\n                                        />\n                                        <label htmlFor=\"inputPassword\">Password</label>\n                                    </div>\n\n                                    <div className=\"form-label-group\">\n                                        <input type=\"password\" id=\"inputCPassword\" className=\"form-control\"\n                                               placeholder=\"Confirm Password\" required autoFocus\n                                               onChange={this.handleCPasswordChange}\n                                        />\n                                        <label htmlFor=\"inputCPassword\">Confirm Password</label>\n                                    </div>\n\n                                    <button className=\"btn btn-lg btn-primary btn-block text-uppercase\"\n                                            type=\"submit\" onClick={this.handleSignUp}>Sign Up\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SignUp\n","import {Component} from \"react\";\nimport React from \"react\";\nimport {Nav, Navbar} from \"react-bootstrap\";\n\nclass Header extends Component{\n    render() {\n        return (\n            <Navbar bg=\"primary\" variant=\"dark\">\n                <Navbar.Brand href=\"/\">Order Food</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/\">Home</Nav.Link>\n                        <Nav.Link href=\"/orders\">My Orders</Nav.Link>\n                        <Nav.Link href=\"/signin\">SignIn</Nav.Link>\n                        <Nav.Link href=\"/signup\">SignUp</Nav.Link>\n                        <Nav.Link href=\"/logout\">Logout</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default Header\n","import {Component} from \"react\";\nimport React from \"react\";\nimport {loadItems, placeOrder} from \"../api\";\nimport {Button, Card} from \"react-bootstrap\";\n\nclass Restaurant extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            restaurantId:undefined,\n            items:[]\n        }\n    }\n\n    componentDidMount(){\n        const { match: { params:{restaurantId} } } = this.props;\n        loadItems(restaurantId)\n            .then(res => this.setState({\n                items:res,\n                restaurantId:restaurantId\n            }))\n            .catch(err => alert(err))\n    }\n\n    handleOrderPlace = (itemId) => {\n        let payload = {\"items\":[{\"id\":itemId}]};\n        placeOrder(payload)\n            .then(res => alert(JSON.stringify(res)))\n            .catch(err => alert(err))\n    };\n\n    render () {\n        return (\n            <div className=\"container\">\n                {this.state.items.map((item) => {\n                    return (\n                        <div key={item.id} className='flex_center'>\n                            <br/>\n                            <Card style={{ width: '18rem' }}>\n                                {/*<Card.Img variant=\"top\" src=\"holder.js/100px180\" />*/}\n                                <Card.Body>\n                                    <Card.Title>{item.name}</Card.Title>\n                                    <Card.Text>\n                                        {item.quantity}\n                                        <br/>\n                                        Price: {item.price}\n                                    </Card.Text>\n                                    <Button variant=\"primary\" onClick={() => this.handleOrderPlace(item.id)}>\n                                        Order Now\n                                    </Button>\n                                </Card.Body>\n                            </Card>\n                            <br/>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default Restaurant\n","import {Component} from \"react\";\nimport React from \"react\";\n\nclass Logout extends Component {\n    render(){\n        localStorage.clear();\n        window.location = \"/\";\n\n        return(<div/>)\n    }\n}\n\nexport default Logout\n","import {Component} from \"react\";\nimport React from \"react\";\nimport {Card} from \"react-bootstrap\";\nimport {loadOrders} from \"../api\";\n\nclass Orders extends Component {\n    constructor(prop){\n        super(prop);\n        this.state= {\n            orders:[]\n        }\n    }\n\n    componentDidMount() {\n        if (!localStorage.getItem('token')) {\n            window.location = \"/signin\";\n        }\n        loadOrders()\n            .then(res => this.setState({orders:res}))\n            .catch(err => alert(err))\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                {this.state.orders.map((order) => {\n                    let item = order.item;\n                    return (\n                        <div key={item.id} className='flex_center'>\n                            <br/>\n                            <Card style={{ width: '18rem' }}>\n                                {/*<Card.Img variant=\"top\" src=\"holder.js/100px180\" />*/}\n                                <Card.Body>\n                                    <Card.Title>{item.name}</Card.Title>\n                                    <Card.Text>\n                                        {item.quantity}\n                                        <br/>\n                                        Price: {item.price}\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                            <br/>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default Orders\n","import React, {Component} from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport './App.css';\nimport Home from \"./components/Home\";\nimport SignIn from \"./components/SignIn\";\nimport SignUp from \"./components/SignUp\";\nimport Header from \"./components/Header\";\nimport Restaurant from \"./components/Restaurant\";\nimport Logout from \"./components/Logout\";\nimport Orders from \"./components/Orders\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Header/>\n                <BrowserRouter>\n                    <div>\n                        <Route exact={true} path='/' component={Home}/>\n                        <Route exact={true} path='/signin' component={SignIn}/>\n                        <Route exact={true} path='/signup' component={SignUp}/>\n                        <Route exact={true} path='/logout' component={Logout}/>\n                        <Route exact={true} path='/orders' component={Orders}/>\n                        <Route path='/restaurant/:restaurantId' component={Restaurant}/>\n                    </div>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}